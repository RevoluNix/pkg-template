on:
  push:
    branches:
    - main
    - setup-auto-release

jobs:
  update_flake:
    name: update and check flake.lock
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4

      - name: Update Nix Flake Lock
        if: ${{ github.event_name != 'pull_request' }}
        uses: DeterminateSystems/update-flake-lock@v21

  auto_ralease:
    needs: update_flake
    name: auto create and push release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
          
      - name: Generate Release version from date
        id: date
        run: |
          TAG_NAME="release-$(date +'%Y.%m.%d-%H.%M.%S')"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "Tag name will be: $TAG_NAME"
      
      - name: Generate tar.gz from src
        id: generate_tar
        run: |
          cd ./src/
          PKG_NAME="$(basename "${{ github.repository }}" | sed 's/pkg-//g')"
          FILE_NAME="src-${PKG_NAME}.tar.gz"
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
          tar -czvf ${FILE_NAME} *
          FILE_HASH=$(sha256sum ${FILE_NAME} | cut -d ' ' -f 1)
          echo "FILE_HASH=$FILE_HASH" >> $GITHUB_ENV

      - name: Generate package.nix
        id: generate_package
        run: |
          URL=$(echo \
            "https://github.com/${{ github.repository }}/releases/download/${{ env.TAG_NAME }}/${{ env.FILE_NAME }}" \
              | sed 's/\//\\\//g'
          )
          SRC="src = fetchurl {\n    url = \"${URL}\";\n    sha256 = \"${{ env.FILE_HASH }}\";\n  }"
          sed -i "s/src = .\/src/${SRC}/g" ./package.nix
          sed -i "s/version = \".*\";/version = \"${{ env.TAG_NAME }}\";/g" ./package.nix
          sed -i "1s/.*/{\n  fetchurl,/" ./package.nix

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.TAG_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          prerelease: false
          files: |
            ./src/${{ env.FILE_NAME }}
            ./package.nix

      - name: Update RevoluNixPKGS
        id: update_pkgs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |          
          gh repo clone RevoluNix/revolunixpkgs
          rm -rf revolunixpkgs/pkgs/${{ env.PKG_NAME }}
          mkdir -p revolunixpkgs/pkgs/${{ env.PKG_NAME }}
          cp package.nix revolunixpkgs/pkgs/${{ env.PKG_NAME }}/package.nix

          cd revolunixpkgs
          git add .
          git commit -m "feat: Update/Upload ${{ env.PKG_NAME }}"
          gh repo push
